{"version":3,"sources":["styles/Colors.ts","states/BuildState.ts","states/SelectedRetailersState.ts","utils/StorageUtils.ts","environment/index.tsx","services/connector.ts","services/BuildService.ts","services/OfferingsService.ts","utils/BuildUtils.ts","utils/FormatUtils.ts","styles/Themes.ts","components/Link.ts","components/Buttons.tsx","components/Hidden.tsx","components/Images.tsx","components/Inputs.tsx","components/Table.tsx","components/Loader.tsx","components/Page.tsx","components/Sidebar.tsx","pages/BuildPage.tsx","pages/CpuPage.tsx","pages/CpuCoolerPage.tsx","pages/MotherboardPage.tsx","pages/MemoryPage.tsx","pages/GpuPage.tsx","pages/SsdPage.tsx","pages/HddPage.tsx","pages/CasePage.tsx","pages/PsuPage.tsx","pages/MonitorPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/vaktinlogo.png"],"names":["Colors","defaultBuild","buildId","cpu","cpuCooler","motherboard","memory","gpu","ssd","hdd","case","psu","monitor","state","createState","wrapState","s","get","value","set","newState","JSON","parse","stringify","accessState","useState","useHookState","defaultState","setItem","key","a","storage","getItem","removeItem","envParams","api","window","location","host","connector","axios","create","baseURL","EnvParams","headers","getBuild","data","createBuild","body","post","getCpus","getCpuCoolers","getMemory","getMotherboard","getGpu","getSsd","getHdd","getCase","getPsu","getMonitor","updateState","changes","history","componentCode","BuildState","offeringIds","component","push","selectedOffering","id","length","BuildService","StorageUtils","clearState","thousandSeparator","num","toString","replace","formatCurrency","getSmallImageUrl","url","split","join","formatFrequency","Number","formatCapacity","ColorThemes","orange","background","Orange","font","White","default","secondary","Link","styled","RouterLink","StyledButton","BootstrapButton","color","Themes","Button","to","rest","IconButtonStyle","IconButton","AddButton","children","CartButton","EditButton","CheckButton","MenuButton","DropdownButtonToggle","DropdownToggle","OfferingsButton","offerings","onSelect","UncontrolledDropdown","caret","DropdownMenu","map","offering","idx","DropdownItem","onClick","retailerName","FormatUtils","price","IsMobile","props","maxDeviceWidth","HideUnder","width","minDeviceWidth","HideOver","SizedImage","img","size","Thumbnail","src","placeholder","ref","actual","imageProps","Select","options","defaultSelected","onChange","selected","setSelected","onSelectedChanged","selectedOptions","disableSearch","hasSelectAll","overrideStrings","selectSomeItems","allItemsAreSelected","TextInput","Input","event","target","Table","renderRow","filters","setFilters","search","setSearch","selectedRetailersState","SelectedRetailersState","selectedRetailers","filteredItems","items","searchSplit","toLowerCase","filter","item","every","word","name","includes","attribute","striped","header","Fragment","parsed","type","label","hideUnder","renderSelectLabel","thin","center","vendor","retailer","renderHeader","Row","tr","Column","right","ImageColumn","NameColumn","WebsiteLink","Black","PriceRange","div","GreyDarker","PriceColumn","componentType","build","useHistory","href","minPrice","BuildUtils","StyledHeader","Header","SelectContainer","SelectHeader","SpinAnimation","keyframes","Container","Spinner","FaSun","Loader","Title","GreyLight","Page","title","LogoContainer","Logo","StyledItem","active","OrangeDark","SidebarText","Separator","SidebarItem","icon","text","components","Sidebar","open","toggleSidebar","isMobile","useMediaQuery","query","useLocation","buildState","sidebar","VaktinLogo","pathname","onSetOpen","docked","styles","backgroundColor","ComponentContainer","ComponentTitle","ComponentInfoContainer","isCompact","GreyDark","ComponentName","ComponentPrice","AvailabilityNotification","ComponentNameImageContainer","RemoveIcon","FaTimes","TopContainer","TotalPrice","ClearButton","Buttons","ComponentNames","BuildPage","stateBuild","routeBuildId","useParams","endsWith","useEffect","currentBuild","storageBuildId","init","totalPrice","Object","keys","reduce","accumulator","Component","componentKey","isCheapest","image","disabled","CpuPage","setData","getData","OfferingsService","response","cpuSocket","coreClock","boostClock","cores","threads","tdp","graphics","CpuCoolerPage","fans","fanSize","MotherboardPage","chipset","motherboardFormFactor","ramSlots","memoryType","m2Slots","MemoryPage","modules","frequency","cas","GpuPage","SsdPage","capacity","readSpeed","writeSpeed","HddPage","format","CasePage","psuFormFactor","PsuPage","watts","rating","pcieEightPin","pcieSixPin","MonitorPage","resolution","panel","refreshRate","gsync","freesync","curved","App","isOpenSidebar","setIsOpenSidebar","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.a50f77c5.chunk.js","sourcesContent":["enum Colors {\r\n  White = '#FFFFFF',\r\n  Black = '#000000',\r\n  Orange = '#D46B2B',\r\n  OrangeDark = '#A95522',\r\n  GreyLight = '#F6F6F6',\r\n  GreyDark = '#95999A',\r\n  GreyDarker = '#6F7374',\r\n}\r\n\r\nexport default Colors;\r\n","import { createState, useState as useHookState, State } from '@hookstate/core';\r\n\r\nimport { Build } from 'types';\r\n\r\nexport const defaultBuild: Build = {\r\n  buildId: '',\r\n  cpu: null,\r\n  cpuCooler: null,\r\n  motherboard: null,\r\n  memory: null,\r\n  gpu: null,\r\n  ssd: null,\r\n  hdd: null,\r\n  case: null,\r\n  psu: null,\r\n  monitor: null,\r\n};\r\n\r\nexport const state = createState(defaultBuild);\r\n\r\nconst wrapState = (s: State<Build>) => ({\r\n  get: () => s.value,\r\n  set: (newState?: Build) =>\r\n    s.set(newState ? JSON.parse(JSON.stringify(newState)) : defaultBuild),\r\n});\r\n\r\nexport const accessState = () => wrapState(state);\r\nexport const useState = () => wrapState(useHookState(state));\r\n","import { createState, useState as useHookState, State } from '@hookstate/core';\r\n\r\ntype SelectedRetailers = string[];\r\n\r\nconst defaultState: SelectedRetailers = [];\r\n\r\nexport const state = createState(defaultState);\r\n\r\nconst wrapState = (s: State<SelectedRetailers>) => ({\r\n  get: () => s.value,\r\n  set: (newState?: string[]) => s.set(newState ?? defaultState),\r\n});\r\n\r\nexport const accessState = () => wrapState(state);\r\nexport const useState = () => wrapState(useHookState(state));\r\n","import storage from 'localforage';\r\n\r\nexport const setItem = async (key: string, value: any) => {\r\n  await storage.setItem(key, value);\r\n};\r\n\r\nexport const getItem = async (key: string): Promise<any> => {\r\n  return await storage.getItem(key);\r\n};\r\n\r\nexport const removeItem = async (key: string) => {\r\n  return await storage.removeItem(key);\r\n};\r\n","type EnvParams = {\r\n  api: string;\r\n};\r\n\r\nconst production: EnvParams = {\r\n  api: `https://api.${window.location.host}/v1`,\r\n};\r\n\r\nconst local: EnvParams = {\r\n  api: 'https://api.builder.vaktin.is/v1',\r\n};\r\n\r\nconst env = process.env.REACT_APP_ENV;\r\n\r\nconst envParams: EnvParams = env === 'production' ? production : local;\r\n\r\nexport default envParams;\r\n","import axios from 'axios';\r\n\r\nimport EnvParams from 'environment';\r\n\r\nconst connector = axios.create({\r\n  baseURL: `${EnvParams.api}`,\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default connector;\r\n","import connector from './connector';\r\n\r\nimport { Build } from 'types';\r\n\r\nexport const getBuild = async (buildId: string): Promise<Build> => {\r\n  const { data } = await connector.get(`/build/${buildId}`);\r\n  return data;\r\n};\r\n\r\nexport const createBuild = async (body: number[]) => {\r\n  const { data } = await connector.post('/build/create/', body);\r\n  return data;\r\n};\r\n","import connector from './connector';\r\nimport {\r\n  CpuContainer,\r\n  CpuCoolerContainer,\r\n  MemoryContainer,\r\n  MotherboardContainer,\r\n  GpuContainer,\r\n  SsdContainer,\r\n  HddContainer,\r\n  CaseContainer,\r\n  PsuContainer,\r\n  MonitorContainer,\r\n} from 'types';\r\n\r\nexport const getCpus = async (): Promise<CpuContainer> => {\r\n  const { data } = await connector.get('/offerings/cpu/');\r\n  return data;\r\n};\r\n\r\nexport const getCpuCoolers = async (): Promise<CpuCoolerContainer> => {\r\n  const { data } = await connector.get('/offerings/cpuCooler/');\r\n  return data;\r\n};\r\n\r\nexport const getMemory = async (): Promise<MemoryContainer> => {\r\n  const { data } = await connector.get('/offerings/memory/');\r\n  return data;\r\n};\r\n\r\nexport const getMotherboard = async (): Promise<MotherboardContainer> => {\r\n  const { data } = await connector.get('/offerings/motherboard/');\r\n  return data;\r\n};\r\n\r\nexport const getGpu = async (): Promise<GpuContainer> => {\r\n  const { data } = await connector.get('/offerings/gpu/');\r\n  return data;\r\n};\r\n\r\nexport const getSsd = async (): Promise<SsdContainer> => {\r\n  const { data } = await connector.get('/offerings/ssd/');\r\n  return data;\r\n};\r\n\r\nexport const getHdd = async (): Promise<HddContainer> => {\r\n  const { data } = await connector.get('/offerings/hdd/');\r\n  return data;\r\n};\r\n\r\nexport const getCase = async (): Promise<CaseContainer> => {\r\n  const { data } = await connector.get('/offerings/case/');\r\n  return data;\r\n};\r\n\r\nexport const getPsu = async (): Promise<PsuContainer> => {\r\n  const { data } = await connector.get('/offerings/psu/');\r\n  return data;\r\n};\r\n\r\nexport const getMonitor = async (): Promise<MonitorContainer> => {\r\n  const { data } = await connector.get('/offerings/monitor/');\r\n  return data;\r\n};\r\n","import { BuildState } from 'states';\r\nimport * as StorageUtils from './StorageUtils';\r\nimport { BuildService } from 'services';\r\n\r\nexport const updateState = async (changes: any, history: any) => {\r\n  const state = BuildState.accessState();\r\n  // Need this hack, else hookstate crashes...\r\n  const newState = { ...state.get(), ...changes };\r\n\r\n  const offeringIds = [];\r\n  for (const componentCode in newState) {\r\n    const component = newState[componentCode];\r\n    if (component && componentCode !== 'buildId') {\r\n      offeringIds.push(component.selectedOffering.id);\r\n    }\r\n  }\r\n  if (offeringIds.length) {\r\n    const buildId = await BuildService.createBuild(offeringIds);\r\n    newState.buildId = buildId;\r\n\r\n    await StorageUtils.setItem('buildId', buildId);\r\n    state.set(newState);\r\n\r\n    if (history) {\r\n      history.push(`/build/${buildId}`);\r\n    }\r\n  } else {\r\n    clearState(history);\r\n  }\r\n};\r\n\r\nexport const clearState = async (history: any) => {\r\n  await StorageUtils.removeItem('buildId');\r\n  BuildState.accessState().set();\r\n  history.push('/build/');\r\n};\r\n","export const thousandSeparator = (num: number | string) => {\r\n  return `${num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}`;\r\n};\r\n\r\nexport const formatCurrency = (num: number | string) => {\r\n  return `${thousandSeparator(num)}kr.`;\r\n};\r\n\r\nexport const getSmallImageUrl = (url: string) => {\r\n  const split = url.split('.');\r\n  split[split.length - 2] += '-small';\r\n  return split.join('.');\r\n};\r\n\r\nexport const formatFrequency = (value: string | number) => {\r\n  const num = Number(value);\r\n  return num >= 1000\r\n    ? `${(num / 1000).toString().replace('.', ',')}GHz`\r\n    : `${num}MHz`;\r\n};\r\n\r\nexport const formatCapacity = (value: string | number) => {\r\n  const num = Number(value);\r\n  return num >= 1000\r\n    ? `${(num / 1000).toString().replace('.', ',')}TB`\r\n    : `${num}GB`;\r\n};\r\n","import Colors from './Colors';\r\n\r\nexport type ThemeTypes = 'orange' | 'default' | 'secondary';\r\n\r\ntype ColorType = {\r\n  background: string;\r\n  font: string;\r\n};\r\n\r\ntype ColorTypes = {\r\n  [key in ThemeTypes]: ColorType;\r\n};\r\n\r\nexport const ColorThemes: ColorTypes = {\r\n  orange: {\r\n    background: Colors.Orange,\r\n    font: Colors.White,\r\n  },\r\n  default: {\r\n    background: Colors.Orange,\r\n    font: Colors.White,\r\n  },\r\n  secondary: {\r\n    background: Colors.Orange,\r\n    font: Colors.White,\r\n  },\r\n};\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Link = styled(RouterLink)`\r\n  text-decoration: none;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n  Button as BootstrapButton,\r\n  ButtonProps as BootstrapButtonProps,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport {\r\n  FaBars,\r\n  FaCartPlus,\r\n  FaCheck,\r\n  FaPencilAlt,\r\n  FaPlus,\r\n} from 'react-icons/fa';\r\n\r\nimport { FormatUtils } from 'utils';\r\nimport { Colors, Themes } from 'styles';\r\nimport Link from './Link';\r\n\r\ntype ButtonProps = BootstrapButtonProps & {\r\n  color?: Themes.ThemeTypes;\r\n  to?: string;\r\n};\r\n\r\nconst StyledButton = styled(BootstrapButton)<ButtonProps>`\r\nborder: none;\r\n${({ color }) =>\r\n  `\r\nbackground-color: ${Themes.ColorThemes[color ?? 'default'].background};\r\ncolor: ${Themes.ColorThemes[color ?? 'default'].font}\r\n`}}\r\n`;\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ to, ...rest }) =>\r\n  to ? (\r\n    <Link to={to}>\r\n      <StyledButton {...rest} />\r\n    </Link>\r\n  ) : (\r\n    <StyledButton {...rest} />\r\n  );\r\n\r\nconst IconButtonStyle = `\r\n  background-color: ${Colors.Orange};\r\n  border: none;\r\n  display: flex;\r\n  color: ${Colors.White};\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  height: 2.4rem;\r\n  width: 2.4rem;\r\n`;\r\n\r\nconst IconButton = styled(Button)`\r\n  ${IconButtonStyle}\r\n`;\r\n\r\nexport const AddButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaPlus />} {...rest} />\r\n);\r\n\r\nexport const CartButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaCartPlus />} {...rest} />\r\n);\r\n\r\nexport const EditButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaPencilAlt />} {...rest} />\r\n);\r\n\r\nexport const CheckButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaCheck />} {...rest} />\r\n);\r\n\r\nconst UnstyledMenuButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaBars />} {...rest} />\r\n);\r\n\r\nexport const MenuButton = styled(UnstyledMenuButton)`\r\n  position: absolute;\r\n  background-color: transparent;\r\n  font-size: 2rem;\r\n  height: 5rem;\r\n  width: 5rem;\r\n`;\r\n\r\nexport const DropdownButtonToggle = styled(DropdownToggle)`\r\n  ${IconButtonStyle}\r\n  width: 100%;\r\n`;\r\n\r\ntype OfferingsButtonProps = {\r\n  offerings: any[];\r\n  onSelect(item: any): void;\r\n};\r\n\r\nexport const OfferingsButton: React.FC<OfferingsButtonProps> = ({\r\n  offerings,\r\n  onSelect,\r\n  children,\r\n}) => (\r\n  <UncontrolledDropdown>\r\n    <DropdownButtonToggle caret>{children}</DropdownButtonToggle>\r\n    <DropdownMenu>\r\n      {offerings.map((offering, idx) => (\r\n        <DropdownItem key={idx} onClick={() => onSelect(offering)}>\r\n          {`${offering.retailerName} - ${FormatUtils.formatCurrency(\r\n            offering.price,\r\n          )}`}\r\n        </DropdownItem>\r\n      ))}\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n","import React from 'react';\r\nimport MediaQuery from 'react-responsive';\r\n\r\nexport const IsMobile: React.FC = (props) => (\r\n  <MediaQuery maxDeviceWidth={1000} {...props} />\r\n);\r\n\r\ntype HideUnderProps = {\r\n  width?: number;\r\n};\r\n\r\nexport const HideUnder: React.FC<HideUnderProps> = ({\r\n  width = 750,\r\n  ...rest\r\n}) => <MediaQuery minDeviceWidth={width} {...rest} />;\r\n\r\nexport const HideOver: React.FC<HideUnderProps> = ({\r\n  width = 750,\r\n  ...rest\r\n}) => <MediaQuery maxDeviceWidth={width} {...rest} />;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { LazyImage } from 'react-lazy-images';\r\n\r\nimport { FormatUtils } from 'utils';\r\n\r\ntype SizedImageProps = {\r\n  size: number;\r\n};\r\n\r\nconst SizedImage = styled.img<SizedImageProps>`\r\n  height: ${({ size }) => `${size}rem`};\r\n`;\r\n\r\ntype ImageProps = {\r\n  src: string;\r\n  size?: number;\r\n};\r\n\r\nexport const Thumbnail: React.FC<ImageProps> = ({ src, size = 2, ...rest }) => (\r\n  <LazyImage\r\n    placeholder={({ ref }) => <div ref={ref} />}\r\n    src={FormatUtils.getSmallImageUrl(src)}\r\n    actual={({ imageProps }) => <SizedImage size={size} {...imageProps} />}\r\n  />\r\n);\r\n","import React, { useState } from 'react';\r\nimport ReactMultiSelect from '@khanacademy/react-multi-select';\r\nimport { Input } from 'reactstrap';\r\n\r\ntype SelectProps = {\r\n  options: any;\r\n  placeholder?: string;\r\n  defaultSelected?: string[];\r\n  onChange?(selected: string[]): void;\r\n};\r\n\r\nexport const Select: React.FC<SelectProps> = ({\r\n  options,\r\n  placeholder,\r\n  defaultSelected = [],\r\n  onChange,\r\n  ...rest\r\n}) => {\r\n  const [selected, setSelected] = useState<string[]>(defaultSelected);\r\n  return (\r\n    <ReactMultiSelect\r\n      options={options}\r\n      selected={selected}\r\n      onSelectedChanged={(selectedOptions: string[]) => {\r\n        setSelected(selectedOptions);\r\n        onChange?.(selectedOptions);\r\n      }}\r\n      disableSearch\r\n      hasSelectAll={false}\r\n      overrideStrings={{\r\n        selectSomeItems: placeholder,\r\n        allItemsAreSelected: 'Allt valið',\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\ntype TextInputProps = {\r\n  onChange?(value: string): void;\r\n  placeholder?: string;\r\n};\r\n\r\nexport const TextInput: React.FC<TextInputProps> = ({ onChange, ...rest }) => (\r\n  <Input\r\n    onChange={(event) => onChange?.(event?.target?.value ?? '')}\r\n    {...rest}\r\n  />\r\n);\r\n","import React, { useState } from 'react';\r\nimport { Table as BootstrapTable } from 'reactstrap';\r\nimport styled from '@emotion/styled';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { FormatUtils, BuildUtils } from 'utils';\r\nimport * as Images from './Images';\r\nimport { Component, ComponentTypes } from 'types';\r\nimport { Buttons, Hidden, Inputs, Loader } from 'components';\r\nimport { BuildState, SelectedRetailersState } from 'states';\r\nimport { Colors } from 'styles';\r\n\r\ntype HeaderObjectProps = {\r\n  type: string;\r\n  label?: string;\r\n  attribute?: string;\r\n  hideUnder?: number;\r\n  renderSelectLabel?(value: string | number): string;\r\n};\r\n\r\ntype TableProps = {\r\n  data: any;\r\n  headers: HeaderObjectProps[];\r\n  renderRow(item: any, idx: number): JSX.Element;\r\n};\r\n\r\ntype Filters = {\r\n  [x: string]: string[];\r\n};\r\n\r\nexport const Table: React.FC<TableProps> = ({\r\n  data,\r\n  headers,\r\n  renderRow,\r\n  ...rest\r\n}) => {\r\n  const [filters, setFilters] = useState<Filters>({});\r\n  const [search, setSearch] = useState('');\r\n  const selectedRetailersState = SelectedRetailersState.useState();\r\n  const selectedRetailers = selectedRetailersState.get();\r\n\r\n  const renderHeader = (header: HeaderObjectProps) => {\r\n    const { type, label, attribute, hideUnder, renderSelectLabel } = header;\r\n    let parsed;\r\n    if (type === 'image') {\r\n      parsed = <Header thin />;\r\n    } else if (type === 'basic') {\r\n      parsed = <Header label={label} center />;\r\n    } else if (type === 'name') {\r\n      parsed = (\r\n        <SelectHeader\r\n          label=\"Framleiðandi\"\r\n          options={data?.vendor.map((value: string) => ({\r\n            label: renderSelectLabel?.(value) ?? value,\r\n            value: value,\r\n          }))}\r\n          onChange={(options) => {\r\n            setFilters({\r\n              ...filters,\r\n              vendor: options,\r\n            });\r\n          }}\r\n        >\r\n          <Inputs.TextInput\r\n            placeholder=\"Leit...\"\r\n            onChange={(value) => setSearch(value)}\r\n          />\r\n        </SelectHeader>\r\n      );\r\n    } else if (type === 'price') {\r\n      parsed = (\r\n        <>\r\n          <SelectHeader\r\n            label=\"Verslanir\"\r\n            options={data?.retailer.map((value: string) => ({\r\n              label: renderSelectLabel?.(value) ?? value,\r\n              value: value,\r\n            }))}\r\n            defaultSelected={selectedRetailers}\r\n            onChange={(options) => {\r\n              selectedRetailersState.set(options);\r\n            }}\r\n          />\r\n          <Header thin />\r\n        </>\r\n      );\r\n    } else if (type === 'select') {\r\n      parsed = (\r\n        <SelectHeader\r\n          label={label ?? ''}\r\n          options={data?.[attribute ?? ''].map((value: string) => ({\r\n            label: renderSelectLabel?.(value) ?? value,\r\n            value: value,\r\n          }))}\r\n          onChange={(options) => {\r\n            setFilters({\r\n              ...filters,\r\n              [attribute ?? '']: options,\r\n            });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (hideUnder) {\r\n      parsed = <Hidden.HideUnder width={hideUnder}>{parsed}</Hidden.HideUnder>;\r\n    }\r\n    return parsed;\r\n  };\r\n  let filteredItems = data?.items;\r\n  if (filteredItems) {\r\n    // Filter by name for searched string\r\n    if (search.length) {\r\n      const searchSplit = search.toLowerCase().split(' ');\r\n      filteredItems = filteredItems.filter((item: Component) =>\r\n        searchSplit.every((word) => item.name.toLowerCase().includes(word)),\r\n      );\r\n    }\r\n    if (selectedRetailers.length) {\r\n      filteredItems = filteredItems\r\n        .map((item: Component) => ({\r\n          ...item,\r\n          offerings: item.offerings.filter((offering) =>\r\n            selectedRetailers.includes(offering.retailerName),\r\n          ),\r\n        }))\r\n        .filter((item: Component) => item.offerings.length > 0);\r\n    }\r\n    // Filter by chosen attributes\r\n    for (const attribute in filters) {\r\n      filteredItems = filteredItems.filter(\r\n        (item: Component) =>\r\n          !filters[attribute].length ||\r\n          filters[attribute].includes(item[attribute]),\r\n      );\r\n    }\r\n  }\r\n\r\n  return !data ? (\r\n    <Loader />\r\n  ) : (\r\n    <BootstrapTable striped {...rest}>\r\n      <>\r\n        <thead>\r\n          <tr>\r\n            {headers.map((header, idx) => (\r\n              <React.Fragment key={idx}>{renderHeader(header)}</React.Fragment>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredItems.map((item: Component, idx: number) =>\r\n            renderRow(item, idx),\r\n          )}\r\n        </tbody>\r\n      </>\r\n    </BootstrapTable>\r\n  );\r\n};\r\n\r\nexport const Row = styled.tr``;\r\n\r\ntype ColumnProps = {\r\n  thin?: boolean;\r\n  center?: boolean;\r\n  right?: boolean;\r\n};\r\n\r\nexport const Column = styled('td')<ColumnProps>`\r\n  vertical-align: middle !important;\r\n  ${({ thin }) => `${thin ? 'width: 1%;' : ''}`}\r\n  ${({ right }) => `${right ? 'text-align: right' : ''}`}\r\n  ${({ center }) => `${center ? 'text-align: center' : ''}`}\r\n`;\r\n\r\ntype ImageColumnProps = {\r\n  src: string;\r\n};\r\n\r\nexport const ImageColumn: React.FC<ImageColumnProps> = ({ src }) => (\r\n  <Column thin center>\r\n    <Images.Thumbnail src={src} />\r\n  </Column>\r\n);\r\n\r\ntype NameColumnProps = {\r\n  item: Component;\r\n};\r\n\r\nexport const NameColumn: React.FC<NameColumnProps> = ({ item }) => (\r\n  <Column>{item.name}</Column>\r\n);\r\n\r\ntype PriceColumnProps = {\r\n  item: Component;\r\n  componentType: ComponentTypes;\r\n};\r\n\r\nconst WebsiteLink = styled.a`\r\n  color: ${Colors.Black};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst PriceRange = styled.div`\r\n  font-size: 0.8rem;\r\n  color: ${Colors.GreyDarker};\r\n`;\r\n\r\nexport const PriceColumn: React.FC<PriceColumnProps> = ({\r\n  item,\r\n  componentType,\r\n}) => {\r\n  const build = BuildState.useState().get();\r\n  const history = useHistory();\r\n\r\n  const component = build[componentType];\r\n  const selected = component?.id === item.id;\r\n  const { offerings } = item;\r\n\r\n  return (\r\n    <>\r\n      <Column right>\r\n        <WebsiteLink href={offerings[0].url} target=\"__blank\">\r\n          {`${offerings[0].retailerName} - ${FormatUtils.formatCurrency(\r\n            offerings[0].price,\r\n          )}`}\r\n        </WebsiteLink>\r\n        {offerings.length > 1 && (\r\n          <PriceRange>\r\n            {`Verðbil: ${FormatUtils.thousandSeparator(\r\n              item.minPrice,\r\n            )} - ${FormatUtils.formatCurrency(\r\n              offerings[offerings.length - 1].price,\r\n            )}`}\r\n          </PriceRange>\r\n        )}\r\n      </Column>\r\n      <Column thin>\r\n        {selected ? (\r\n          <Buttons.CheckButton color=\"secondary\" />\r\n        ) : (\r\n          <Buttons.CartButton\r\n            onClick={() =>\r\n              BuildUtils.updateState(\r\n                {\r\n                  [componentType]: { ...item, selectedOffering: offerings[0] },\r\n                },\r\n                history,\r\n              )\r\n            }\r\n            offerings={offerings}\r\n          />\r\n        )}\r\n      </Column>\r\n    </>\r\n  );\r\n};\r\n\r\ntype Option = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\ntype HeaderProps = ColumnProps & {\r\n  label?: string;\r\n};\r\n\r\nconst StyledHeader = styled('th')<HeaderProps>`\r\n  border-top: none !important;\r\n  ${({ thin }) => `${thin ? 'width: 1%;' : ''}`}\r\n  ${({ right }) => `${right ? 'text-align: right' : ''}`}\r\n  ${({ center }) => `${center ? 'text-align: center' : ''}`}\r\n`;\r\n\r\nexport const Header: React.FC<HeaderProps> = ({ label, ...rest }) => (\r\n  <StyledHeader {...rest}>{label}</StyledHeader>\r\n);\r\n\r\nconst SelectContainer = styled.div`\r\n  display: flex;\r\n  > div {\r\n    flex-grow: 1;\r\n    min-width: 50%;\r\n  }\r\n`;\r\n\r\ntype SelectHeaderProps = {\r\n  label: string;\r\n  options: Option[];\r\n  defaultSelected?: string[];\r\n  onChange(options: any): void;\r\n};\r\n\r\nconst SelectHeader: React.FC<SelectHeaderProps> = ({\r\n  label,\r\n  options,\r\n  defaultSelected,\r\n  onChange,\r\n  children,\r\n}) => (\r\n  <StyledHeader>\r\n    <SelectContainer>\r\n      <Hidden.HideUnder width={640}>\r\n        <Inputs.Select\r\n          options={options}\r\n          defaultSelected={defaultSelected}\r\n          onChange={(selectedOptions: string[]) => onChange(selectedOptions)}\r\n          placeholder={label}\r\n        />\r\n      </Hidden.HideUnder>\r\n      {children}\r\n    </SelectContainer>\r\n  </StyledHeader>\r\n);\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { keyframes } from '@emotion/core';\r\nimport { FaSun } from 'react-icons/fa';\r\n\r\nconst SpinAnimation = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(359deg);\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  animation: ${SpinAnimation} 4s infinite linear;\r\n  font-size: 4rem;\r\n`;\r\n\r\nconst Spinner = styled(FaSun)``;\r\n\r\nconst Loader: React.FC = () => (\r\n  <Container>\r\n    <Spinner />\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Colors } from 'styles';\r\n\r\nconst Container = styled.div`\r\n  margin: 1rem 2rem;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 5rem;\r\n  font-size: 2rem;\r\n  background-color: ${Colors.Black};\r\n  color: ${Colors.GreyLight};\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n`;\r\n\r\ntype PageProps = {\r\n  title: string;\r\n};\r\n\r\nconst Page: React.FC<PageProps> = ({ title, ...rest }) => (\r\n  <>\r\n    <Title>{title}</Title>\r\n    <Container {...rest} />\r\n  </>\r\n);\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport ReactSidebar from 'react-sidebar';\r\nimport styled from '@emotion/styled';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { FaMemory, FaBox, FaHammer } from 'react-icons/fa';\r\nimport { FiCpu, FiHardDrive, FiMonitor } from 'react-icons/fi';\r\nimport { CgDrive, CgScreenMirror } from 'react-icons/cg';\r\nimport { ImPower } from 'react-icons/im';\r\nimport { GiCircuitry, GiComputerFan } from 'react-icons/gi';\r\n\r\nimport { Link } from 'components';\r\nimport { Colors } from 'styles';\r\nimport { BuildState } from 'states';\r\n\r\nimport VaktinLogo from 'assets/vaktinlogo.png';\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  justify-content: center;\r\n  height: 5rem;\r\n  background-color: ${Colors.Black};\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  height: 3rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledItem = styled('div')<{ active: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.5rem;\r\n  padding: 0.6rem;\r\n  color: ${Colors.GreyLight};\r\n  ${({ active }) => (active ? `background-color: ${Colors.OrangeDark};` : '')}\r\n`;\r\n\r\nconst SidebarText = styled.div`\r\n  margin-left: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Separator = styled.div`\r\n  height: 2px;\r\n  width: 100%;\r\n  background-color: ${Colors.GreyLight};\r\n`;\r\n\r\ntype SidebarItemProps = {\r\n  active: boolean;\r\n  icon: JSX.Element;\r\n  text: string;\r\n};\r\n\r\nconst SidebarItem: React.FC<SidebarItemProps> = ({\r\n  active,\r\n  icon,\r\n  text,\r\n  ...rest\r\n}) => (\r\n  <StyledItem active={active} {...rest}>\r\n    {icon}\r\n    <SidebarText>{text}</SidebarText>\r\n  </StyledItem>\r\n);\r\n\r\ntype SidebarProps = {\r\n  open: boolean;\r\n  toggleSidebar(): void;\r\n};\r\n\r\nconst components = [\r\n  {\r\n    icon: <FaHammer />,\r\n    text: 'Tölvan',\r\n    to: null,\r\n  },\r\n  {\r\n    icon: <FiCpu />,\r\n    text: 'Örgjörvar',\r\n    to: '/cpu',\r\n  },\r\n  {\r\n    icon: <GiComputerFan />,\r\n    text: 'Kælingar',\r\n    to: '/cpuCooler',\r\n  },\r\n  {\r\n    icon: <GiCircuitry />,\r\n    text: 'Móðurborð',\r\n    to: '/motherboard',\r\n  },\r\n  {\r\n    icon: <FaMemory />,\r\n    text: 'Minni',\r\n    to: '/memory',\r\n  },\r\n  {\r\n    icon: <CgScreenMirror />,\r\n    text: 'Skjákort',\r\n    to: '/gpu',\r\n  },\r\n  {\r\n    icon: <CgDrive />,\r\n    text: 'SSD',\r\n    to: '/ssd',\r\n  },\r\n  {\r\n    icon: <FiHardDrive />,\r\n    text: 'HDD',\r\n    to: '/hdd',\r\n  },\r\n  {\r\n    icon: <FaBox />,\r\n    text: 'Kassar',\r\n    to: '/case',\r\n  },\r\n  {\r\n    icon: <ImPower />,\r\n    text: 'Aflgjafar',\r\n    to: '/psu',\r\n  },\r\n  {\r\n    icon: <FiMonitor />,\r\n    text: 'Skjáir',\r\n    to: '/monitor',\r\n  },\r\n];\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ children, open, toggleSidebar }) => {\r\n  const isMobile = useMediaQuery({ query: '(max-width: 1000px)' });\r\n  const location = useLocation();\r\n  const buildState = BuildState.useState().get();\r\n\r\n  return (\r\n    <ReactSidebar\r\n      sidebar={\r\n        <>\r\n          <LogoContainer>\r\n            <Logo src={VaktinLogo} />\r\n          </LogoContainer>\r\n          {components.map(({ to, ...component }, idx) => (\r\n            <React.Fragment key={idx}>\r\n              <Link\r\n                to={to ?? `/build/${buildState.buildId ?? ''}`}\r\n                onClick={toggleSidebar}\r\n              >\r\n                <SidebarItem\r\n                  active={\r\n                    (!to && location.pathname.includes('build')) ||\r\n                    to === location.pathname\r\n                  }\r\n                  {...component}\r\n                />\r\n              </Link>\r\n              {!idx && <Separator />}\r\n            </React.Fragment>\r\n          ))}\r\n        </>\r\n      }\r\n      open={open}\r\n      onSetOpen={toggleSidebar}\r\n      docked={!isMobile}\r\n      styles={{\r\n        sidebar: {\r\n          backgroundColor: Colors.Orange,\r\n          width: '300px',\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </ReactSidebar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\r\n\r\nimport { BuildState } from 'states';\r\nimport { Buttons, Images, Page } from 'components';\r\nimport { BuildUtils, FormatUtils, StorageUtils } from 'utils';\r\nimport { Colors } from 'styles';\r\nimport { BuildService } from 'services';\r\nimport { FaRedo, FaTimes } from 'react-icons/fa';\r\n\r\nconst ComponentContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  a {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst ComponentTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ComponentInfoContainer = styled.div<{ isCompact: boolean }>`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 0.5rem;\r\n  ${({ isCompact }) =>\r\n    isCompact\r\n      ? ''\r\n      : `\r\n  border: 1px solid ${Colors.GreyDark};\r\n  border-radius: 1rem;\r\n  margin-left: 3.5em;\r\n  padding: 1rem;\r\n  `}\r\n`;\r\n\r\nconst ComponentName = styled.div`\r\n  margin-left: 0.5rem;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ComponentPrice = styled.div`\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  text-align: right;\r\n`;\r\n\r\nconst AvailabilityNotification = styled.div`\r\n  text-align: right;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst ComponentNameImageContainer = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${Colors.Black};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst RemoveIcon = styled(FaTimes)`\r\n  width: 2rem;\r\n  color: #929292;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TopContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TotalPrice = styled.div`\r\n  font-size: 1.3rem;\r\n  text-decoration: underline;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ClearButton = styled(Buttons.Button)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst ComponentNames: { [x: string]: string } = {\r\n  cpu: 'Örgjörvi',\r\n  cpuCooler: 'Kæling',\r\n  motherboard: 'Móðurborð',\r\n  memory: 'Vinnsluminni',\r\n  gpu: 'Skjákort',\r\n  ssd: 'SSD',\r\n  hdd: 'HDD',\r\n  case: 'Kassi',\r\n  psu: 'Aflgjafi',\r\n  monitor: 'Skjár',\r\n};\r\n\r\ntype HomeRouteParams = {\r\n  buildId: string;\r\n};\r\n\r\nconst BuildPage: React.FC = () => {\r\n  const buildState: any = BuildState.useState();\r\n  const stateBuild: any = buildState.get();\r\n  const { buildId: routeBuildId }: HomeRouteParams = useParams();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const isCompact = location.pathname.endsWith('/compact');\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      // We have the build in state, so we don't have to get from storage or server\r\n      if (stateBuild.buildId) {\r\n        return;\r\n      }\r\n      let currentBuild;\r\n      if (routeBuildId) {\r\n        currentBuild = await BuildService.getBuild(routeBuildId);\r\n      } else {\r\n        const storageBuildId: string = await StorageUtils.getItem('buildId');\r\n        if (storageBuildId) {\r\n          currentBuild = await BuildService.getBuild(storageBuildId);\r\n        }\r\n      }\r\n      if (currentBuild?.buildId) {\r\n        history.push(\r\n          `/build/${currentBuild?.buildId}${isCompact ? '/compact' : ''}`,\r\n        );\r\n      }\r\n      buildState.set({ ...BuildState.defaultBuild, ...currentBuild });\r\n    };\r\n    init();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const totalPrice = Object.keys(stateBuild).reduce((accumulator, key) => {\r\n    const component = stateBuild[key];\r\n    return accumulator + (component?.selectedOffering?.price ?? 0);\r\n  }, 0);\r\n\r\n  const Component: React.FC<{ componentKey: string }> = ({ componentKey }) => {\r\n    if (componentKey === 'buildId') return null;\r\n    const component = stateBuild[componentKey];\r\n    const Button = component ? Buttons.EditButton : Buttons.AddButton;\r\n    const isCheapest =\r\n      component?.selectedOffering?.price === component?.minPrice;\r\n    return (\r\n      <ComponentContainer>\r\n        {!isCompact && (\r\n          <ComponentTitle>\r\n            <Button to={`/${componentKey}`} />\r\n            {ComponentNames[componentKey]}\r\n            {component && (\r\n              <RemoveIcon\r\n                onClick={() =>\r\n                  BuildUtils.updateState(\r\n                    {\r\n                      [componentKey]: null,\r\n                    },\r\n                    history,\r\n                  )\r\n                }\r\n              />\r\n            )}\r\n          </ComponentTitle>\r\n        )}\r\n        {component && (\r\n          <ComponentInfoContainer isCompact={isCompact}>\r\n            <ComponentNameImageContainer\r\n              href={component?.selectedOffering?.url}\r\n              target=\"__blank\"\r\n            >\r\n              <Images.Thumbnail size={4} src={component.image} />\r\n              <ComponentName>{component.name}</ComponentName>\r\n            </ComponentNameImageContainer>\r\n            <ComponentPrice>\r\n              {component.offerings.length > 1 ? (\r\n                <Buttons.OfferingsButton\r\n                  offerings={component.offerings}\r\n                  onSelect={(offering) => {\r\n                    BuildUtils.updateState(\r\n                      {\r\n                        [componentKey]: {\r\n                          ...component,\r\n                          selectedOffering: offering,\r\n                        },\r\n                      },\r\n                      history,\r\n                    );\r\n                  }}\r\n                >\r\n                  {`${\r\n                    component?.selectedOffering.retailerName\r\n                  } - ${FormatUtils.formatCurrency(\r\n                    component.selectedOffering.price,\r\n                  )}`}\r\n                </Buttons.OfferingsButton>\r\n              ) : (\r\n                `${\r\n                  component.selectedOffering.retailerName\r\n                } - ${FormatUtils.formatCurrency(\r\n                  component.selectedOffering.price,\r\n                )}`\r\n              )}\r\n              {!isCheapest && (\r\n                <AvailabilityNotification>Til ódýrara</AvailabilityNotification>\r\n              )}\r\n              {component.selectedOffering.disabled && (\r\n                <AvailabilityNotification>\r\n                  Ekki lengur í boði hjá söluaðila\r\n                </AvailabilityNotification>\r\n              )}\r\n            </ComponentPrice>\r\n          </ComponentInfoContainer>\r\n        )}\r\n      </ComponentContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Page title={`${isCompact ? 'Íhlutir' : 'Veldu íhluti'}`}>\r\n      <TopContainer>\r\n        {!isCompact && (\r\n          <ClearButton onClick={() => BuildUtils.clearState(history)}>\r\n            <FaRedo />\r\n            Byrja upp á nýtt\r\n          </ClearButton>\r\n        )}\r\n        <TotalPrice>\r\n          Samtals: {FormatUtils.formatCurrency(totalPrice)}\r\n        </TotalPrice>\r\n      </TopContainer>\r\n      {Object.keys(stateBuild).map((componentKey: string) => (\r\n        <Component key={componentKey} componentKey={componentKey} />\r\n      ))}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default BuildPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { FormatUtils } from 'utils';\r\nimport { CpuContainer } from 'types';\r\n\r\nconst CpuPage: React.FC = () => {\r\n  const [data, setData] = useState<CpuContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: CpuContainer = await OfferingsService.getCpus();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu örgjörva\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'cpuSocket',\r\n            label: 'Sökkull',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Tíðni/Boost',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Kjarnar/Þræðir',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'TDP',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Skjástýring',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.cpuSocket}</Table.Column>\r\n            <Table.Column center>\r\n              {FormatUtils.formatFrequency(item.coreClock)}\r\n              {item.boostClock &&\r\n                ` / ${FormatUtils.formatFrequency(item.boostClock)}`}\r\n            </Table.Column>\r\n            <Hidden.HideUnder>\r\n              <Table.Column center>\r\n                {item.cores}/{item.threads}\r\n              </Table.Column>\r\n              <Table.Column center>{item.tdp}W</Table.Column>\r\n              <Table.Column center>{item.graphics}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"cpu\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CpuPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { CpuCoolerContainer } from 'types';\r\n\r\nconst CpuCoolerPage: React.FC = () => {\r\n  const [data, setData] = useState<CpuCoolerContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: CpuCoolerContainer = await OfferingsService.getCpuCoolers();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu örgjörvakælingu\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'fanSize',\r\n            renderSelectLabel: (value) => `${value}mm`,\r\n            label: 'Viftustærð',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column\r\n              center\r\n            >{`${item.fans}x ${item.fanSize}mm`}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"cpuCooler\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CpuCoolerPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { MotherboardContainer } from 'types';\r\n\r\nconst MotherboardPage: React.FC = () => {\r\n  const [data, setData] = useState<MotherboardContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response = await OfferingsService.getMotherboard();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu móðurborð\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'cpuSocket',\r\n            label: 'Sökull',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'chipset',\r\n            label: 'Kubbasett',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'motherboardFormFactor',\r\n            label: 'Staðall',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Minnisraufar',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'M.2 raufar',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.cpuSocket}</Table.Column>\r\n            <Table.Column center>{item.chipset}</Table.Column>\r\n            <Table.Column center>{item.motherboardFormFactor}</Table.Column>\r\n            <Table.Column\r\n              center\r\n            >{`${item.ramSlots}x ${item.memoryType}`}</Table.Column>\r\n            <Hidden.HideUnder>\r\n              <Table.Column center>{`${item.m2Slots}`}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"motherboard\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MotherboardPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { MemoryContainer } from 'types';\r\n\r\nconst MemoryPage: React.FC = () => {\r\n  const [data, setData] = useState<MemoryContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: MemoryContainer = await OfferingsService.getMemory();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu vinnsluminni\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'type',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'size',\r\n            renderSelectLabel: (value) => `${value}GB`,\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'frequency',\r\n            renderSelectLabel: (value) => `${value}MHz`,\r\n            label: 'Tíðni',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'CAS',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.type}</Table.Column>\r\n            <Table.Column center>{`${item.size}GB (${item.modules}x${\r\n              item.size / item.modules\r\n            }GB)`}</Table.Column>\r\n            <Table.Column center>{item.frequency}MHz</Table.Column>\r\n            <Hidden.HideUnder>\r\n              <Table.Column center>{item.cas}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"memory\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MemoryPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { GpuContainer } from 'types';\r\n\r\nconst GpuPage: React.FC = () => {\r\n  const [data, setData] = useState<GpuContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: GpuContainer = await OfferingsService.getGpu();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu skjákort\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'type',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.type}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"gpu\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default GpuPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { SsdContainer } from 'types';\r\nimport { FormatUtils } from 'utils';\r\n\r\nconst SsdPage: React.FC = () => {\r\n  const [data, setData] = useState<SsdContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: SsdContainer = await OfferingsService.getSsd();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu SSD\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'type',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'capacity',\r\n            renderSelectLabel: (value) => FormatUtils.formatCapacity(value),\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Hraði',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.type}</Table.Column>\r\n            <Table.Column center>\r\n              {FormatUtils.formatCapacity(item.capacity)}\r\n            </Table.Column>\r\n            <Table.Column\r\n              center\r\n            >{`${item.readSpeed}MB/s / ${item.writeSpeed}MB/s`}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"ssd\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SsdPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { HddContainer } from 'types';\r\nimport { FormatUtils } from 'utils';\r\n\r\nconst HddPage: React.FC = () => {\r\n  const [data, setData] = useState<HddContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: HddContainer = await OfferingsService.getHdd();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu harðan disk\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'format',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'capacity',\r\n            renderSelectLabel: (value) => FormatUtils.formatCapacity(value),\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.format}</Table.Column>\r\n            <Table.Column center>\r\n              {FormatUtils.formatCapacity(item.capacity)}\r\n            </Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"hdd\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HddPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { CaseContainer } from 'types';\r\n\r\nconst CasePage: React.FC = () => {\r\n  const [data, setData] = useState<CaseContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: CaseContainer = await OfferingsService.getCase();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu kassa\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'motherboardFormFactor',\r\n            label: 'Stærð móðurborðs',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'psuFormFactor',\r\n            label: 'Stærð aflgjafa',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.motherboardFormFactor}</Table.Column>\r\n            <Table.Column center>{item.psuFormFactor}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"case\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CasePage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { PsuContainer } from 'types';\r\n\r\nconst PsuPage: React.FC = () => {\r\n  const [data, setData] = useState<PsuContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: PsuContainer = await OfferingsService.getPsu();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu aflgjafa\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'watts',\r\n            renderSelectLabel: (value) => `${value}W`,\r\n            label: 'Afl',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'rating',\r\n            label: 'Nýtnistaðall',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'psuFormFactor',\r\n            label: 'Stærð aflgjafa',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'PCI-E tengi',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.watts}W</Table.Column>\r\n            <Hidden.HideUnder>\r\n              <Table.Column center>{item.rating}</Table.Column>\r\n              <Table.Column center>{item.psuFormFactor}</Table.Column>\r\n              <Table.Column center>{`${item.pcieEightPin}x 8-pin ${\r\n                !item.pcieSixPin ? '' : `/ ${item.pcieSixPin}x 6-pin`\r\n              }`}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"psu\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PsuPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { FaCheck } from 'react-icons/fa';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { MonitorContainer } from 'types';\r\n\r\nconst MonitorPage: React.FC = () => {\r\n  const [data, setData] = useState<MonitorContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response = await OfferingsService.getMonitor();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu skjá\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'size',\r\n            renderSelectLabel: (value) => `${value}\"`,\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'resolution',\r\n            label: 'Upplausn',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'panel',\r\n            label: 'Panel',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'refreshRate',\r\n            renderSelectLabel: (value) => `${value}Hz`,\r\n            label: 'Tíðni',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'gsync',\r\n            label: 'G-Sync',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'freesync',\r\n            label: 'FreeSync',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Curved',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.size}\"</Table.Column>\r\n            <Table.Column center>{item.resolution}</Table.Column>\r\n            <Hidden.HideUnder>\r\n              <Table.Column center>{item.panel}</Table.Column>\r\n              <Table.Column center>{item.refreshRate}Hz</Table.Column>\r\n              <Table.Column center>{item.gsync}</Table.Column>\r\n              <Table.Column center>{item.freesync}</Table.Column>\r\n              <Table.Column center>{item.curved && <FaCheck />}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"monitor\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MonitorPage;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'styles/GlobalOverride.css';\r\n\r\nimport { Sidebar, Buttons, Hidden } from 'components';\r\n\r\nimport BuildPage from 'pages/BuildPage';\r\nimport CpuPage from 'pages/CpuPage';\r\nimport CpuCoolerPage from 'pages/CpuCoolerPage';\r\nimport MotherboardPage from 'pages/MotherboardPage';\r\nimport MemoryPage from 'pages/MemoryPage';\r\nimport GpuPage from 'pages/GpuPage';\r\nimport SsdPage from 'pages/SsdPage';\r\nimport HddPage from 'pages/HddPage';\r\nimport CasePage from 'pages/CasePage';\r\nimport PsuPage from 'pages/PsuPage';\r\nimport MonitorPage from 'pages/MonitorPage';\r\n\r\nconst App = () => {\r\n  const [isOpenSidebar, setIsOpenSidebar] = useState(false);\r\n\r\n  const toggleSidebar = () => setIsOpenSidebar(!isOpenSidebar);\r\n\r\n  return (\r\n    <Router>\r\n      <Sidebar open={isOpenSidebar} toggleSidebar={toggleSidebar}>\r\n        <Hidden.IsMobile>\r\n          <Buttons.MenuButton onClick={toggleSidebar} />\r\n        </Hidden.IsMobile>\r\n        <Switch>\r\n          <Route exact path=\"/build/\" component={BuildPage} />\r\n          <Route exact path=\"/build/:buildId\" component={BuildPage} />\r\n          <Route exact path=\"/build/:buildId/compact\" component={BuildPage} />\r\n          <Route exact path=\"/cpu\" component={CpuPage} />\r\n          <Route exact path=\"/cpuCooler\" component={CpuCoolerPage} />\r\n          <Route exact path=\"/motherboard\" component={MotherboardPage} />\r\n          <Route exact path=\"/memory\" component={MemoryPage} />\r\n          <Route exact path=\"/gpu\" component={GpuPage} />\r\n          <Route exact path=\"/ssd\" component={SsdPage} />\r\n          <Route exact path=\"/hdd\" component={HddPage} />\r\n          <Route exact path=\"/case\" component={CasePage} />\r\n          <Route exact path=\"/psu\" component={PsuPage} />\r\n          <Route exact path=\"/monitor\" component={MonitorPage} />\r\n          <Redirect to=\"/build/\" />\r\n        </Switch>\r\n      </Sidebar>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import '@hookstate/devtools';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/vaktinlogo.0309df28.png\";"],"sourceRoot":""}