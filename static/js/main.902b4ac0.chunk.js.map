{"version":3,"sources":["styles/Colors.ts","states/BuildState.ts","utils/StorageUtils.ts","environment/index.tsx","services/connector.ts","services/BuildService.ts","services/OfferingsService.ts","utils/BuildUtils.ts","utils/FormatUtils.ts","styles/Themes.ts","components/Link.ts","components/Buttons.tsx","components/Hidden.tsx","components/Images.ts","components/Table.tsx","components/Page.tsx","components/Sidebar.tsx","pages/BuildPage.tsx","pages/CpuPage.tsx","pages/CpuCoolerPage.tsx","pages/MotherboardPage.tsx","pages/MemoryPage.tsx","pages/GpuPage.tsx","pages/SsdPage.tsx","pages/HddPage.tsx","pages/CasePage.tsx","pages/PsuPage.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/vaktinlogo.png"],"names":["Colors","defaultBuild","buildId","cpu","cpuCooler","motherboard","memory","gpu","ssd","hdd","case","psu","state","createState","wrapState","s","get","value","set","newState","JSON","parse","stringify","accessState","useState","useHookState","setItem","key","a","storage","getItem","removeItem","envParams","api","connector","axios","create","baseURL","EnvParams","headers","getBuild","data","createBuild","body","post","getCpus","getMemory","getCpuCoolers","getMotherboard","getGpu","getSsd","getHdd","getCase","getPsu","updateState","changes","history","componentCode","BuildState","offeringIds","component","push","selectedOffering","id","length","BuildService","StorageUtils","clearState","thousandSeparator","num","toString","replace","formatCurrency","getSmallImageUrl","url","split","join","formatFrequency","Number","formatCapacity","ColorThemes","orange","background","Orange","font","White","default","secondary","Link","styled","RouterLink","StyledButton","BootstrapButton","color","Themes","Button","to","rest","IconButtonStyle","IconButton","AddButton","children","EditButton","CheckButton","MenuButton","DropdownButtonToggle","DropdownToggle","OfferingsButton","offerings","onSelect","UncontrolledDropdown","caret","DropdownMenu","map","offering","idx","DropdownItem","onClick","retailerName","FormatUtils","price","IsMobile","props","maxDeviceWidth","HideUnder","width","minDeviceWidth","HideOver","Thumbnail","img","Table","renderRow","filters","setFilters","filteredItems","items","attribute","filter","item","includes","striped","header","Fragment","parsed","type","label","hideUnder","renderSelectLabel","thin","center","right","options","onChange","renderHeader","Row","tr","Column","ImageColumn","src","NameColumn","name","WebsiteLink","Black","PriceColumn","componentType","build","useHistory","selected","href","target","BuildUtils","StyledHeader","Header","SelectHeader","setSelected","onSelectedChanged","selectedOptions","disableSearch","hasSelectAll","overrideStrings","selectSomeItems","allItemsAreSelected","Container","div","Title","GreyLight","Page","title","LogoContainer","Logo","StyledItem","active","OrangeDark","SidebarText","Separator","SidebarItem","icon","text","components","Sidebar","open","toggleSidebar","isMobile","useMediaQuery","query","location","useLocation","buildState","sidebar","VaktinLogo","pathname","onSetOpen","docked","styles","backgroundColor","ComponentContainer","ComponentTitle","ComponentInfoContainer","GreyDark","ComponentName","ComponentPrice","AvailabilityNotification","ComponentThumbnail","ComponentNameImageContainer","RemoveIcon","FaTimes","TopContainer","TotalPrice","ClearButton","Buttons","ComponentNames","HomePage","stateBuild","routeBuildId","useParams","useEffect","currentBuild","storageBuildId","init","totalPrice","Object","keys","reduce","accumulator","isCheapest","minPrice","image","disabled","renderComponent","CpuPage","setData","getData","OfferingsService","response","cpuSocket","coreClock","boostClock","cores","threads","tdp","graphics","CpuCoolerPage","fans","fanSize","MotherboardPage","chipset","motherboardFormFactor","ramSlots","m2Slots","MemoryPage","size","modules","frequency","cas","GpuPage","SsdPage","capacity","readSpeed","writeSpeed","HddPage","format","CasePage","psuFormFactor","PsuPage","watts","pcieEightPin","pcieSixPin","App","isOpenSidebar","setIsOpenSidebar","exact","path","BuildPage","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.902b4ac0.chunk.js","sourcesContent":["enum Colors {\r\n  White = '#FFFFFF',\r\n  Black = '#000000',\r\n  Orange = '#D46B2B',\r\n  OrangeDark = '#A95522',\r\n  GreyLight = '#F6F6F6',\r\n  GreyDark = '#95999A',\r\n}\r\n\r\nexport default Colors;\r\n","import { createState, useState as useHookState, State } from '@hookstate/core';\r\n\r\nimport { Build } from 'types';\r\n\r\nexport const defaultBuild: Build = {\r\n  buildId: '',\r\n  cpu: null,\r\n  cpuCooler: null,\r\n  motherboard: null,\r\n  memory: null,\r\n  gpu: null,\r\n  ssd: null,\r\n  hdd: null,\r\n  case: null,\r\n  psu: null,\r\n};\r\n\r\nexport const state = createState(defaultBuild);\r\n\r\nconst wrapState = (s: State<Build>) => ({\r\n  get: () => s.value,\r\n  set: (newState?: Build) =>\r\n    s.set(newState ? JSON.parse(JSON.stringify(newState)) : defaultBuild),\r\n});\r\n\r\nexport const accessState = () => wrapState(state);\r\nexport const useState = () => wrapState(useHookState(state));\r\n","import storage from 'localforage';\r\n\r\nexport const setItem = async (key: string, value: any) => {\r\n  await storage.setItem(key, value);\r\n};\r\n\r\nexport const getItem = async (key: string): Promise<any> => {\r\n  return await storage.getItem(key);\r\n};\r\n\r\nexport const removeItem = async (key: string) => {\r\n  return await storage.removeItem(key);\r\n};\r\n","type EnvParams = {\r\n  api: string;\r\n};\r\n\r\nconst production: EnvParams = {\r\n  api: 'https://api.pcbuilder.xyz/v1',\r\n};\r\n\r\nconst local: EnvParams = {\r\n  api: 'http://127.0.0.1:8000/v1',\r\n};\r\n\r\nconst env = process.env.REACT_APP_ENV;\r\n\r\nconst envParams: EnvParams = env === 'production' ? production : local;\r\n\r\nexport default envParams;\r\n","import axios from 'axios';\r\n\r\nimport EnvParams from 'environment';\r\n\r\nconst connector = axios.create({\r\n  baseURL: `${EnvParams.api}`,\r\n  headers: {\r\n    'Accept': 'application/json',\r\n    'Content-type': 'application/json',\r\n  },\r\n});\r\n\r\nexport default connector;\r\n","import connector from './connector';\r\n\r\nimport { Build } from 'types';\r\n\r\nexport const getBuild = async (buildId: string): Promise<Build> => {\r\n  const { data } = await connector.get(`/build/${buildId}`);\r\n  return data;\r\n};\r\n\r\nexport const createBuild = async (body: number[]) => {\r\n  const { data } = await connector.post('/build/create/', body);\r\n  return data;\r\n};\r\n","import connector from './connector';\r\n\r\nexport const getCpus = async () => {\r\n  const { data } = await connector.get('/offerings/cpu/');\r\n  return data;\r\n};\r\n\r\nexport const getMemory = async () => {\r\n  const { data } = await connector.get('/offerings/memory/');\r\n  return data;\r\n};\r\n\r\nexport const getCpuCoolers = async () => {\r\n  const { data } = await connector.get('/offerings/cpuCooler/');\r\n  return data;\r\n};\r\n\r\nexport const getMotherboard = async () => {\r\n  const { data } = await connector.get('/offerings/motherboard/');\r\n  return data;\r\n};\r\n\r\nexport const getGpu = async () => {\r\n  const { data } = await connector.get('/offerings/gpu/');\r\n  return data;\r\n};\r\n\r\nexport const getSsd = async () => {\r\n  const { data } = await connector.get('/offerings/ssd/');\r\n  return data;\r\n};\r\n\r\nexport const getHdd = async () => {\r\n  const { data } = await connector.get('/offerings/hdd/');\r\n  return data;\r\n};\r\n\r\nexport const getCase = async () => {\r\n  const { data } = await connector.get('/offerings/case/');\r\n  return data;\r\n};\r\n\r\nexport const getPsu = async () => {\r\n  const { data } = await connector.get('/offerings/psu/');\r\n  return data;\r\n};\r\n","import { BuildState } from 'states';\r\nimport * as StorageUtils from './StorageUtils';\r\nimport { BuildService } from 'services';\r\n\r\nexport const updateState = async (changes: any, history: any) => {\r\n  const state = BuildState.accessState();\r\n  // Need this hack, else hookstate crashes...\r\n  const newState = { ...state.get(), ...changes };\r\n\r\n  const offeringIds = [];\r\n  for (const componentCode in newState) {\r\n    const component = newState[componentCode];\r\n    if (component && componentCode !== 'buildId') {\r\n      offeringIds.push(component.selectedOffering.id);\r\n    }\r\n  }\r\n  if (offeringIds.length) {\r\n    const buildId = await BuildService.createBuild(offeringIds);\r\n    newState.buildId = buildId;\r\n\r\n    await StorageUtils.setItem('buildId', buildId);\r\n    state.set(newState);\r\n\r\n    if (history) {\r\n      history.push(`/build/${buildId}`);\r\n    }\r\n  } else {\r\n    clearState(history);\r\n  }\r\n};\r\n\r\nexport const clearState = async (history: any) => {\r\n  await StorageUtils.removeItem('buildId');\r\n  BuildState.accessState().set();\r\n  history.push('/build/');\r\n};\r\n","export const thousandSeparator = (num: number | string) => {\r\n  return `${num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')}`;\r\n};\r\n\r\nexport const formatCurrency = (num: number | string) => {\r\n  return `${thousandSeparator(num)}kr.`;\r\n};\r\n\r\nexport const getSmallImageUrl = (url: string) => {\r\n  const split = url.split('.');\r\n  split[split.length - 2] += '-small';\r\n  return split.join('.');\r\n};\r\n\r\nexport const formatFrequency = (value: string | number) => {\r\n  const num = Number(value);\r\n  return num >= 1000\r\n    ? `${(num / 1000).toString().replace('.', ',')}GHz`\r\n    : `${num}MHz`;\r\n};\r\n\r\nexport const formatCapacity = (value: string | number) => {\r\n  const num = Number(value);\r\n  return num >= 1000\r\n    ? `${(num / 1000).toString().replace('.', ',')}TB`\r\n    : `${num}GB`;\r\n};\r\n","import Colors from './Colors';\r\n\r\nexport type ThemeTypes = 'orange' | 'default' | 'secondary';\r\n\r\ntype ColorType = {\r\n  background: string;\r\n  font: string;\r\n};\r\n\r\ntype ColorTypes = {\r\n  [key in ThemeTypes]: ColorType;\r\n};\r\n\r\nexport const ColorThemes: ColorTypes = {\r\n  orange: {\r\n    background: Colors.Orange,\r\n    font: Colors.White,\r\n  },\r\n  default: {\r\n    background: Colors.Orange,\r\n    font: Colors.White,\r\n  },\r\n  secondary: {\r\n    background: Colors.Orange,\r\n    font: Colors.White,\r\n  },\r\n};\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Link = styled(RouterLink)`\r\n  text-decoration: none;\r\n\r\n  &:focus,\r\n  &:hover,\r\n  &:visited,\r\n  &:link,\r\n  &:active {\r\n    text-decoration: none;\r\n  }\r\n`;\r\n\r\nexport default Link;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport {\r\n  Button as BootstrapButton,\r\n  ButtonProps as BootstrapButtonProps,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from 'reactstrap';\r\nimport {\r\n  FaBars,\r\n  FaCartPlus,\r\n  FaCheck,\r\n  FaPencilAlt,\r\n  FaPlus,\r\n} from 'react-icons/fa';\r\n\r\nimport { FormatUtils } from 'utils';\r\nimport { Colors, Themes } from 'styles';\r\nimport Link from './Link';\r\n\r\ntype ButtonProps = BootstrapButtonProps & {\r\n  color?: Themes.ThemeTypes;\r\n  to?: string;\r\n};\r\n\r\nconst StyledButton = styled(BootstrapButton)<ButtonProps>`\r\nborder: none;\r\n${({ color }) =>\r\n  `\r\nbackground-color: ${Themes.ColorThemes[color ?? 'default'].background};\r\ncolor: ${Themes.ColorThemes[color ?? 'default'].font}\r\n`}}\r\n`;\r\n\r\nexport const Button: React.FC<ButtonProps> = ({ to, ...rest }) =>\r\n  to ? (\r\n    <Link to={to}>\r\n      <StyledButton {...rest} />\r\n    </Link>\r\n  ) : (\r\n    <StyledButton {...rest} />\r\n  );\r\n\r\nconst IconButtonStyle = `\r\n  background-color: ${Colors.Orange};\r\n  border: none;\r\n  display: flex;\r\n  color: ${Colors.White};\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  height: 2.4rem;\r\n  width: 2.4rem;\r\n`;\r\n\r\nconst IconButton = styled(Button)`\r\n  ${IconButtonStyle}\r\n`;\r\n\r\nexport const AddButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaPlus />} {...rest} />\r\n);\r\n\r\nexport const EditButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaPencilAlt />} {...rest} />\r\n);\r\n\r\nexport const CheckButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaCheck />} {...rest} />\r\n);\r\n\r\nconst UnstyledMenuButton: React.FC<ButtonProps> = ({ ...rest }) => (\r\n  <IconButton children={<FaBars />} {...rest} />\r\n);\r\n\r\nexport const MenuButton = styled(UnstyledMenuButton)`\r\n  position: absolute;\r\n  background-color: transparent;\r\n  font-size: 2rem;\r\n  height: 5rem;\r\n  width: 5rem;\r\n`;\r\n\r\nexport const DropdownButtonToggle = styled(DropdownToggle)`\r\n  ${IconButtonStyle}\r\n  width: 100%;\r\n`;\r\n\r\ntype OfferingsButtonProps = {\r\n  offerings: any[];\r\n  onSelect(item: any): void;\r\n};\r\n\r\nexport const OfferingsButton: React.FC<OfferingsButtonProps> = ({\r\n  offerings,\r\n  onSelect,\r\n  children,\r\n}) => (\r\n  <UncontrolledDropdown>\r\n    <DropdownButtonToggle caret={!!children}>\r\n      {children ?? <FaCartPlus />}\r\n    </DropdownButtonToggle>\r\n    <DropdownMenu>\r\n      {offerings.map((offering, idx) => (\r\n        <DropdownItem key={idx} onClick={() => onSelect(offering)}>\r\n          {`${offering.retailerName} - ${FormatUtils.formatCurrency(\r\n            offering.price,\r\n          )}`}\r\n        </DropdownItem>\r\n      ))}\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n","import React from 'react';\r\nimport MediaQuery from 'react-responsive';\r\n\r\nexport const IsMobile: React.FC = (props) => (\r\n  <MediaQuery maxDeviceWidth={1000} {...props} />\r\n);\r\n\r\ntype HideUnderProps = {\r\n  width: number;\r\n};\r\n\r\nexport const HideUnder: React.FC<HideUnderProps> = ({ width, ...rest }) => (\r\n  <MediaQuery minDeviceWidth={width} {...rest} />\r\n);\r\n\r\nexport const HideOver: React.FC<HideUnderProps> = ({ width, ...rest }) => (\r\n  <MediaQuery maxDeviceWidth={width} {...rest} />\r\n);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Thumbnail = styled.img`\r\n  height: 2rem;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { Table as BootstrapTable } from 'reactstrap';\r\nimport styled from '@emotion/styled';\r\nimport Select from '@khanacademy/react-multi-select';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { FormatUtils, BuildUtils } from 'utils';\r\nimport * as Images from './Images';\r\nimport { Component, ComponentTypes } from 'types';\r\nimport { Buttons, Hidden } from 'components';\r\nimport { BuildState } from 'states';\r\nimport { Colors } from 'styles';\r\n\r\ntype HeaderObjectProps = {\r\n  type: string;\r\n  label?: string;\r\n  attribute?: string;\r\n  hideUnder?: number;\r\n  renderSelectLabel?(value: string | number): string;\r\n};\r\n\r\ntype TableProps = {\r\n  data: any;\r\n  headers: HeaderObjectProps[];\r\n  renderRow(item: any, idx: number): JSX.Element;\r\n};\r\n\r\ntype Filters = {\r\n  [x: string]: string[];\r\n};\r\n\r\nexport const Table: React.FC<TableProps> = ({\r\n  data,\r\n  headers,\r\n  renderRow,\r\n  ...rest\r\n}) => {\r\n  const [filters, setFilters] = useState<Filters>({});\r\n\r\n  const renderHeader = (header: HeaderObjectProps) => {\r\n    const { type, label, attribute, hideUnder, renderSelectLabel } = header;\r\n    let parsed;\r\n    if (type === 'image') {\r\n      parsed = <Header thin />;\r\n    } else if (type === 'basic') {\r\n      parsed = <Header label={label} center />;\r\n    } else if (type === 'name') {\r\n      parsed = <Header label=\"Nafn\" />;\r\n    } else if (type === 'price') {\r\n      parsed = (\r\n        <>\r\n          <Header label=\"Lægsta verð\" right />\r\n          <Header thin />\r\n        </>\r\n      );\r\n    } else if (type === 'select') {\r\n      parsed = (\r\n        <SelectHeader\r\n          label={label ?? ''}\r\n          options={data?.[attribute ?? ''].map((value: string) => ({\r\n            label: renderSelectLabel?.(value) ?? value,\r\n            value: value,\r\n          }))}\r\n          onChange={(options) => {\r\n            setFilters({\r\n              ...filters,\r\n              [attribute ?? '']: options,\r\n            });\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (hideUnder) {\r\n      parsed = <Hidden.HideUnder width={hideUnder}>{parsed}</Hidden.HideUnder>;\r\n    }\r\n    return parsed;\r\n  };\r\n  let filteredItems = data?.items;\r\n  if (filteredItems) {\r\n    for (const attribute in filters) {\r\n      filteredItems = filteredItems.filter(\r\n        (item: Component) =>\r\n          !filters[attribute].length ||\r\n          filters[attribute].includes(item[attribute]),\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <BootstrapTable striped {...rest}>\r\n      {!data ? null : (\r\n        <>\r\n          <thead>\r\n            <tr>\r\n              {headers.map((header, idx) => (\r\n                <React.Fragment key={idx}>\r\n                  {renderHeader(header)}\r\n                </React.Fragment>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredItems.map((item: Component, idx: number) =>\r\n              renderRow(item, idx),\r\n            )}\r\n          </tbody>\r\n        </>\r\n      )}\r\n    </BootstrapTable>\r\n  );\r\n};\r\n\r\nexport const Row = styled.tr``;\r\n\r\ntype ColumnProps = {\r\n  thin?: boolean;\r\n  center?: boolean;\r\n  right?: boolean;\r\n};\r\n\r\nexport const Column = styled('td')<ColumnProps>`\r\n  vertical-align: middle !important;\r\n  ${({ thin }) => `${thin ? 'width: 1%;' : ''}`}\r\n  ${({ right }) => `${right ? 'text-align: right' : ''}`}\r\n  ${({ center }) => `${center ? 'text-align: center' : ''}`}\r\n`;\r\n\r\ntype ImageColumnProps = {\r\n  src: string;\r\n};\r\n\r\nexport const ImageColumn: React.FC<ImageColumnProps> = ({ src }) => (\r\n  <Column thin center>\r\n    <Images.Thumbnail src={FormatUtils.getSmallImageUrl(src)} />\r\n  </Column>\r\n);\r\n\r\ntype NameColumnProps = {\r\n  item: Component;\r\n};\r\n\r\nexport const NameColumn: React.FC<NameColumnProps> = ({ item }) => (\r\n  <Column>{item.name}</Column>\r\n);\r\n\r\ntype PriceColumnProps = {\r\n  item: Component;\r\n  componentType: ComponentTypes;\r\n};\r\n\r\nconst WebsiteLink = styled.a`\r\n  color: ${Colors.Black};\r\n  text-decoration: underline;\r\n`;\r\n\r\nexport const PriceColumn: React.FC<PriceColumnProps> = ({\r\n  item,\r\n  componentType,\r\n}) => {\r\n  const build = BuildState.useState().get();\r\n  const history = useHistory();\r\n\r\n  const component = build[componentType];\r\n  const selected = component?.id === item.id;\r\n  const { offerings } = item;\r\n\r\n  return (\r\n    <>\r\n      <Column right>\r\n        <WebsiteLink href={offerings[0].url} target=\"__blank\">\r\n          {`${offerings[0].retailerName} - ${FormatUtils.formatCurrency(\r\n            offerings[0].price,\r\n          )}`}\r\n        </WebsiteLink>\r\n      </Column>\r\n      <Column thin>\r\n        {selected ? (\r\n          <Buttons.CheckButton color=\"secondary\" />\r\n        ) : (\r\n          <Buttons.OfferingsButton\r\n            onSelect={(offering) =>\r\n              BuildUtils.updateState(\r\n                {\r\n                  [componentType]: { ...item, selectedOffering: offering },\r\n                },\r\n                history,\r\n              )\r\n            }\r\n            offerings={offerings}\r\n          />\r\n        )}\r\n      </Column>\r\n    </>\r\n  );\r\n};\r\n\r\ntype Option = {\r\n  label: string;\r\n  value: string;\r\n};\r\n\r\ntype HeaderProps = ColumnProps & {\r\n  label?: string;\r\n};\r\n\r\nconst StyledHeader = styled('th')<HeaderProps>`\r\n  border-top: none !important;\r\n  ${({ thin }) => `${thin ? 'width: 1%;' : ''}`}\r\n  ${({ right }) => `${right ? 'text-align: right' : ''}`}\r\n  ${({ center }) => `${center ? 'text-align: center' : ''}`}\r\n`;\r\n\r\nexport const Header: React.FC<HeaderProps> = ({ label, ...rest }) => (\r\n  <StyledHeader {...rest}>{label}</StyledHeader>\r\n);\r\n\r\ntype SelectHeaderProps = {\r\n  label: string;\r\n  options: Option[];\r\n  onChange(options: any): void;\r\n};\r\n\r\nconst SelectHeader: React.FC<SelectHeaderProps> = ({\r\n  label,\r\n  options,\r\n  onChange,\r\n}) => {\r\n  const [selected, setSelected] = useState<string[]>([]);\r\n  return (\r\n    <StyledHeader>\r\n      <Select\r\n        options={options}\r\n        selected={selected}\r\n        onSelectedChanged={(selectedOptions: string[]) => {\r\n          setSelected(selectedOptions);\r\n          onChange(selectedOptions);\r\n        }}\r\n        disableSearch\r\n        hasSelectAll={false}\r\n        overrideStrings={{\r\n          selectSomeItems: label,\r\n          allItemsAreSelected: 'Allt valið',\r\n        }}\r\n      />\r\n    </StyledHeader>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nimport { Colors } from 'styles';\r\n\r\nconst Container = styled.div`\r\n  margin: 1rem 2rem;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 5rem;\r\n  font-size: 2rem;\r\n  background-color: ${Colors.Black};\r\n  color: ${Colors.GreyLight};\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n`;\r\n\r\ntype PageProps = {\r\n  title: string;\r\n};\r\n\r\nconst Page: React.FC<PageProps> = ({ title, ...rest }) => (\r\n  <>\r\n    <Title>{title}</Title>\r\n    <Container {...rest} />\r\n  </>\r\n);\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport ReactSidebar from 'react-sidebar';\r\nimport styled from '@emotion/styled';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { FaMemory, FaBox, FaHammer } from 'react-icons/fa';\r\nimport { FiCpu, FiHardDrive } from 'react-icons/fi';\r\nimport { CgDrive, CgScreenMirror } from 'react-icons/cg';\r\nimport { ImPower } from 'react-icons/im';\r\nimport { GiCircuitry, GiComputerFan } from 'react-icons/gi';\r\n\r\nimport { Link } from 'components';\r\nimport { Colors } from 'styles';\r\nimport { BuildState } from 'states';\r\n\r\nimport VaktinLogo from 'assets/vaktinlogo.png';\r\n\r\nconst LogoContainer = styled.div`\r\n  display: flex;\r\n  padding: 1rem;\r\n  height: 5rem;\r\n  background-color: ${Colors.Black};\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 50%;\r\n  text-align: center;\r\n`;\r\n\r\nconst StyledItem = styled('div')<{ active: boolean }>`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  color: ${Colors.GreyLight};\r\n  ${({ active }) => (active ? `background-color: ${Colors.OrangeDark};` : '')}\r\n`;\r\n\r\nconst SidebarText = styled.div`\r\n  margin-left: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: 400;\r\n`;\r\n\r\nconst Separator = styled.div`\r\n  height: 2px;\r\n  width: 100%;\r\n  background-color: ${Colors.GreyLight};\r\n`;\r\n\r\ntype SidebarItemProps = {\r\n  active: boolean;\r\n  icon: JSX.Element;\r\n  text: string;\r\n};\r\n\r\nconst SidebarItem: React.FC<SidebarItemProps> = ({\r\n  active,\r\n  icon,\r\n  text,\r\n  ...rest\r\n}) => (\r\n  <StyledItem active={active} {...rest}>\r\n    {icon}\r\n    <SidebarText>{text}</SidebarText>\r\n  </StyledItem>\r\n);\r\n\r\ntype SidebarProps = {\r\n  open: boolean;\r\n  toggleSidebar(): void;\r\n};\r\n\r\nconst components = [\r\n  {\r\n    icon: <FaHammer />,\r\n    text: 'Tölvan',\r\n    to: null,\r\n  },\r\n  {\r\n    icon: <FiCpu />,\r\n    text: 'Örgjörvar',\r\n    to: '/cpu',\r\n  },\r\n  {\r\n    icon: <GiComputerFan />,\r\n    text: 'Kælingar',\r\n    to: '/cpuCooler',\r\n  },\r\n  {\r\n    icon: <GiCircuitry />,\r\n    text: 'Móðurborð',\r\n    to: '/motherboard',\r\n  },\r\n  {\r\n    icon: <FaMemory />,\r\n    text: 'Minni',\r\n    to: '/memory',\r\n  },\r\n  {\r\n    icon: <CgScreenMirror />,\r\n    text: 'Skjákort',\r\n    to: '/gpu',\r\n  },\r\n  {\r\n    icon: <CgDrive />,\r\n    text: 'SSD',\r\n    to: '/ssd',\r\n  },\r\n  {\r\n    icon: <FiHardDrive />,\r\n    text: 'HDD',\r\n    to: '/hdd',\r\n  },\r\n  {\r\n    icon: <FaBox />,\r\n    text: 'Kassar',\r\n    to: '/case',\r\n  },\r\n  {\r\n    icon: <ImPower />,\r\n    text: 'Aflgjafar',\r\n    to: '/psu',\r\n  },\r\n];\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({ children, open, toggleSidebar }) => {\r\n  const isMobile = useMediaQuery({ query: '(max-width: 1000px)' });\r\n  const location = useLocation();\r\n  const buildState = BuildState.useState().get();\r\n\r\n  return (\r\n    <ReactSidebar\r\n      sidebar={\r\n        <>\r\n          <LogoContainer>\r\n            <Logo src={VaktinLogo} />\r\n          </LogoContainer>\r\n          {components.map(({ to, ...component }, idx) => (\r\n            <React.Fragment key={idx}>\r\n              <Link to={to ?? `/build/${buildState.buildId ?? ''}`}>\r\n                <SidebarItem active={to === location.pathname} {...component} />\r\n              </Link>\r\n              {!idx && <Separator />}\r\n            </React.Fragment>\r\n          ))}\r\n        </>\r\n      }\r\n      open={open}\r\n      onSetOpen={toggleSidebar}\r\n      docked={!isMobile}\r\n      styles={{\r\n        sidebar: {\r\n          backgroundColor: Colors.Orange,\r\n          width: '300px',\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </ReactSidebar>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { BuildState } from 'states';\r\nimport { Buttons, Page } from 'components';\r\nimport { BuildUtils, FormatUtils, StorageUtils } from 'utils';\r\nimport { Colors } from 'styles';\r\nimport { BuildService } from 'services';\r\nimport { FaRedo, FaTimes } from 'react-icons/fa';\r\n\r\nconst ComponentContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  a {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst ComponentTitle = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ComponentInfoContainer = styled.div`\r\n  display: flex;\r\n  border: 1px solid ${Colors.GreyDark};\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-radius: 1rem;\r\n  margin-top: 0.5rem;\r\n  margin-left: 3.5em;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst ComponentName = styled.div`\r\n  margin-left: 0.5rem;\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ComponentPrice = styled.div`\r\n  font-size: 1.3rem;\r\n  font-weight: bold;\r\n  text-align: right;\r\n`;\r\n\r\nconst AvailabilityNotification = styled.div`\r\n  text-align: right;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst ComponentThumbnail = styled.img`\r\n  height: 4rem;\r\n`;\r\n\r\nconst ComponentNameImageContainer = styled.a`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${Colors.Black};\r\n  text-decoration: underline;\r\n`;\r\n\r\nconst RemoveIcon = styled(FaTimes)`\r\n  width: 2rem;\r\n  color: #929292;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TopContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TotalPrice = styled.div`\r\n  font-size: 1.3rem;\r\n  text-decoration: underline;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst ClearButton = styled(Buttons.Button)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n\r\n  svg {\r\n    margin-right: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst ComponentNames: { [x: string]: string } = {\r\n  cpu: 'Örgjörvi',\r\n  cpuCooler: 'Kæling',\r\n  motherboard: 'Móðurborð',\r\n  memory: 'Vinnsluminni',\r\n  gpu: 'Skjákort',\r\n  ssd: 'SSD',\r\n  hdd: 'HDD',\r\n  case: 'Kassi',\r\n  psu: 'Aflgjafi',\r\n};\r\n\r\ntype HomeRouteParams = {\r\n  buildId: string;\r\n};\r\n\r\nconst HomePage: React.FC = () => {\r\n  const buildState: any = BuildState.useState();\r\n  const stateBuild: any = buildState.get();\r\n  const { buildId: routeBuildId }: HomeRouteParams = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      // We have the build in state, so we don't have to get from storage or server\r\n      if (stateBuild.buildId) {\r\n        return;\r\n      }\r\n      let currentBuild;\r\n      if (routeBuildId) {\r\n        currentBuild = await BuildService.getBuild(routeBuildId);\r\n      } else {\r\n        const storageBuildId: string = await StorageUtils.getItem('buildId');\r\n        if (storageBuildId) {\r\n          currentBuild = await BuildService.getBuild(storageBuildId);\r\n        }\r\n      }\r\n      buildState.set({ ...BuildState.defaultBuild, ...currentBuild });\r\n    };\r\n    init();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const totalPrice = Object.keys(stateBuild).reduce((accumulator, key) => {\r\n    const component = stateBuild[key];\r\n    return accumulator + (component?.selectedOffering?.price ?? 0);\r\n  }, 0);\r\n\r\n  const renderComponent = (key: string) => {\r\n    if (key === 'buildId') return null;\r\n    const component = stateBuild[key];\r\n    const Button = component ? Buttons.EditButton : Buttons.AddButton;\r\n    const isCheapest =\r\n      component?.selectedOffering?.price === component?.minPrice;\r\n    return (\r\n      <ComponentContainer key={key}>\r\n        <ComponentTitle key={key}>\r\n          <Button to={`/${key}`} />\r\n          {ComponentNames[key]}\r\n          {component && (\r\n            <RemoveIcon\r\n              onClick={() =>\r\n                BuildUtils.updateState(\r\n                  {\r\n                    [key]: null,\r\n                  },\r\n                  history,\r\n                )\r\n              }\r\n            />\r\n          )}\r\n        </ComponentTitle>\r\n        {component && (\r\n          <ComponentInfoContainer>\r\n            <ComponentNameImageContainer\r\n              href={component?.selectedOffering?.url}\r\n              target=\"__blank\"\r\n            >\r\n              <ComponentThumbnail\r\n                src={FormatUtils.getSmallImageUrl(component.image)}\r\n              />\r\n              <ComponentName>{component.name}</ComponentName>\r\n            </ComponentNameImageContainer>\r\n            <ComponentPrice>\r\n              {component.offerings.length > 1 ? (\r\n                <Buttons.OfferingsButton\r\n                  offerings={component.offerings}\r\n                  onSelect={(offering) => {\r\n                    BuildUtils.updateState(\r\n                      {\r\n                        [key]: {\r\n                          ...component,\r\n                          selectedOffering: offering,\r\n                        },\r\n                      },\r\n                      history,\r\n                    );\r\n                  }}\r\n                >\r\n                  {`${\r\n                    component?.selectedOffering.retailerName\r\n                  } - ${FormatUtils.formatCurrency(\r\n                    component.selectedOffering.price,\r\n                  )}`}\r\n                </Buttons.OfferingsButton>\r\n              ) : (\r\n                `${\r\n                  component.selectedOffering.retailerName\r\n                } - ${FormatUtils.formatCurrency(\r\n                  component.selectedOffering.price,\r\n                )}`\r\n              )}\r\n              {!isCheapest && (\r\n                <AvailabilityNotification>Til ódýrara</AvailabilityNotification>\r\n              )}\r\n              {component.selectedOffering.disabled && (\r\n                <AvailabilityNotification>\r\n                  Ekki lengur í boði hjá söluaðila\r\n                </AvailabilityNotification>\r\n              )}\r\n            </ComponentPrice>\r\n          </ComponentInfoContainer>\r\n        )}\r\n      </ComponentContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu íhluti\">\r\n      <TopContainer>\r\n        <ClearButton onClick={() => BuildUtils.clearState(history)}>\r\n          <FaRedo />\r\n          Byrja upp á nýtt\r\n        </ClearButton>\r\n        <TotalPrice>\r\n          Samtals: {FormatUtils.formatCurrency(totalPrice)}\r\n        </TotalPrice>\r\n      </TopContainer>\r\n      {Object.keys(stateBuild).map((key: string) => renderComponent(key))}\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { FormatUtils } from 'utils';\r\nimport { CpuContainer } from 'types';\r\n\r\nconst CpuPage: React.FC = () => {\r\n  const [data, setData] = useState<CpuContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: CpuContainer = await OfferingsService.getCpus();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu örgjörva\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'cpuSocket',\r\n            label: 'Sökkull',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Tíðni/Boost',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Kjarnar/Þræðir',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'TDP',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Skjástýring',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.cpuSocket}</Table.Column>\r\n            <Table.Column center>\r\n              {FormatUtils.formatFrequency(item.coreClock)}\r\n              {item.boostClock &&\r\n                ` / ${FormatUtils.formatFrequency(item.boostClock)}`}\r\n            </Table.Column>\r\n            <Hidden.HideUnder width={750}>\r\n              <Table.Column center>\r\n                {item.cores}/{item.threads}\r\n              </Table.Column>\r\n              <Table.Column center>{item.tdp}W</Table.Column>\r\n              <Table.Column center>{item.graphics}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"cpu\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CpuPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { CpuCoolerContainer } from 'types';\r\n\r\nconst CpuCoolerPage: React.FC = () => {\r\n  const [data, setData] = useState<CpuCoolerContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: CpuCoolerContainer = await OfferingsService.getCpuCoolers();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu örgjörvakælingu\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'fans',\r\n            label: 'Viftur',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'fanSize',\r\n            renderSelectLabel: (value) => `${value}mm`,\r\n            label: 'Stærð vifta',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.fans}</Table.Column>\r\n            <Table.Column center>{item.fanSize}mm</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"cpuCooler\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CpuCoolerPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { MotherboardContainer } from 'types';\r\n\r\nconst MotherboardPage: React.FC = () => {\r\n  const [data, setData] = useState<MotherboardContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: MotherboardContainer = await OfferingsService.getMotherboard();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu aflgjafa\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'cpuSocket',\r\n            label: 'Sökull',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'chipset',\r\n            label: 'Kubbasett',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'motherboardFormFactor',\r\n            label: 'Staðall',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Minnisraufar',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'm.2 raufar',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.cpuSocket}</Table.Column>\r\n            <Table.Column center>{item.chipset}</Table.Column>\r\n            <Table.Column center>{item.motherboardFormFactor}</Table.Column>\r\n            <Table.Column center>{`${item.ramSlots}`}</Table.Column>\r\n            <Table.Column center>{`${item.m2Slots}`}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"motherboard\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MotherboardPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { MemoryContainer } from 'types';\r\n\r\nconst MemoryPage: React.FC = () => {\r\n  const [data, setData] = useState<MemoryContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: MemoryContainer = await OfferingsService.getMemory();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu vinnsluminni\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'type',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'size',\r\n            renderSelectLabel: (value) => `${value}GB`,\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'frequency',\r\n            renderSelectLabel: (value) => `${value}MHz`,\r\n            label: 'Tíðni',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'CAS',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.type}</Table.Column>\r\n            <Table.Column center>{`${item.size}GB (${item.modules}x${\r\n              item.size / item.modules\r\n            }GB)`}</Table.Column>\r\n            <Table.Column center>{item.frequency}MHz</Table.Column>\r\n            <Hidden.HideUnder width={750}>\r\n              <Table.Column center>{item.cas}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"memory\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default MemoryPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { GpuContainer } from 'types';\r\n\r\nconst GpuPage: React.FC = () => {\r\n  const [data, setData] = useState<GpuContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: GpuContainer = await OfferingsService.getGpu();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu skjákort\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'type',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.type}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"gpu\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default GpuPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { SsdContainer } from 'types';\r\nimport { FormatUtils } from 'utils';\r\n\r\nconst SsdPage: React.FC = () => {\r\n  const [data, setData] = useState<SsdContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: SsdContainer = await OfferingsService.getSsd();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu SSD\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'type',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'capacity',\r\n            renderSelectLabel: (value) => FormatUtils.formatCapacity(value),\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'Hraði',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.type}</Table.Column>\r\n            <Table.Column center>\r\n              {FormatUtils.formatCapacity(item.capacity)}\r\n            </Table.Column>\r\n            <Table.Column\r\n              center\r\n            >{`${item.readSpeed}MB/s / ${item.writeSpeed}MB/s`}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"ssd\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SsdPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { HddContainer } from 'types';\r\nimport { FormatUtils } from 'utils';\r\n\r\nconst HddPage: React.FC = () => {\r\n  const [data, setData] = useState<HddContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: HddContainer = await OfferingsService.getHdd();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu harðan disk\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'format',\r\n            label: 'Tegund',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'capacity',\r\n            renderSelectLabel: (value) => FormatUtils.formatCapacity(value),\r\n            label: 'Stærð',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.format}</Table.Column>\r\n            <Table.Column center>\r\n              {FormatUtils.formatCapacity(item.capacity)}\r\n            </Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"hdd\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default HddPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { CaseContainer } from 'types';\r\n\r\nconst CasePage: React.FC = () => {\r\n  const [data, setData] = useState<CaseContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: CaseContainer = await OfferingsService.getCase();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu kassa\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'motherboardFormFactor',\r\n            label: 'Stærð móðurborðs',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'psuFormFactor',\r\n            label: 'Stærð aflgjafa',\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.motherboardFormFactor}</Table.Column>\r\n            <Table.Column center>{item.psuFormFactor}</Table.Column>\r\n            <Table.PriceColumn item={item} componentType=\"case\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CasePage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Hidden, Page, Table } from 'components';\r\nimport { OfferingsService } from 'services';\r\nimport { PsuContainer } from 'types';\r\n\r\nconst PsuPage: React.FC = () => {\r\n  const [data, setData] = useState<PsuContainer>();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response: PsuContainer = await OfferingsService.getPsu();\r\n    setData(response);\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Veldu aflgjafa\">\r\n      <Table.Table\r\n        data={data}\r\n        headers={[\r\n          {\r\n            type: 'image',\r\n          },\r\n          {\r\n            type: 'name',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'rating',\r\n            label: 'Nýtnistaðall',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'watts',\r\n            renderSelectLabel: (value) => `${value}W`,\r\n            label: 'Afl',\r\n          },\r\n          {\r\n            type: 'select',\r\n            attribute: 'psuFormFactor',\r\n            label: 'Stærð aflgjafa',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'basic',\r\n            label: 'PCI-E tengi',\r\n            hideUnder: 750,\r\n          },\r\n          {\r\n            type: 'price',\r\n          },\r\n        ]}\r\n        renderRow={(item, idx) => (\r\n          <Table.Row key={idx}>\r\n            <Table.ImageColumn src={item.image} />\r\n            <Table.NameColumn item={item} />\r\n            <Table.Column center>{item.watts}W</Table.Column>\r\n            <Hidden.HideUnder width={750}>\r\n              <Table.Column center>{item.psuFormFactor}</Table.Column>\r\n              <Table.Column center>{`${item.pcieEightPin}x 8-pin ${\r\n                !item.pcieSixPin ? '' : `/ ${item.pcieSixPin}x 6-pin`\r\n              }`}</Table.Column>\r\n            </Hidden.HideUnder>\r\n            <Table.PriceColumn item={item} componentType=\"psu\" />\r\n          </Table.Row>\r\n        )}\r\n      />\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default PsuPage;\r\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'styles/GlobalOverride.css';\n\nimport { Sidebar, Buttons, Hidden } from 'components';\n\nimport BuildPage from 'pages/BuildPage';\nimport CpuPage from 'pages/CpuPage';\nimport CpuCoolerPage from 'pages/CpuCoolerPage';\nimport MotherboardPage from 'pages/MotherboardPage';\nimport MemoryPage from 'pages/MemoryPage';\nimport GpuPage from 'pages/GpuPage';\nimport SsdPage from 'pages/SsdPage';\nimport HddPage from 'pages/HddPage';\nimport CasePage from 'pages/CasePage';\nimport PsuPage from 'pages/PsuPage';\n\nconst App = () => {\n  const [isOpenSidebar, setIsOpenSidebar] = useState(false);\n\n  const toggleSidebar = () => setIsOpenSidebar(!isOpenSidebar);\n\n  return (\n    <Router>\n      <Sidebar open={isOpenSidebar} toggleSidebar={toggleSidebar}>\n        <Hidden.IsMobile>\n          <Buttons.MenuButton onClick={toggleSidebar} />\n        </Hidden.IsMobile>\n        <Switch>\n          <Route exact path=\"/build/\" component={BuildPage} />\n          <Route exact path=\"/build/:buildId\" component={BuildPage} />\n          <Route exact path=\"/cpu\" component={CpuPage} />\n          <Route exact path=\"/cpuCooler\" component={CpuCoolerPage} />\n          <Route exact path=\"/motherboard\" component={MotherboardPage} />\n          <Route exact path=\"/memory\" component={MemoryPage} />\n          <Route exact path=\"/gpu\" component={GpuPage} />\n          <Route exact path=\"/ssd\" component={SsdPage} />\n          <Route exact path=\"/hdd\" component={HddPage} />\n          <Route exact path=\"/case\" component={CasePage} />\n          <Route exact path=\"/psu\" component={PsuPage} />\n          <Redirect to=\"/build/\" />\n        </Switch>\n      </Sidebar>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import '@hookstate/devtools';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/vaktinlogo.0309df28.png\";"],"sourceRoot":""}